ARG base
FROM ${base}

# Docker script to set up training docker image.
LABEL maintainer="Yun Zhu(zhuyun@ppdai.com)"

# install os dependencies
ADD ./scripts/install_os_requirements /opt/install_os_requirements
RUN /bin/bash /opt/install_os_requirements/install.sh

ARG project_home_in_docker
ENV PROJECT_HOME=${project_home_in_docker}
ARG project_name
ENV PROJECT_NAME=${project_name}

ARG train_user=cbd
ARG train_uid=1000
ARG train_gid=100
ENV USER=${train_user} \
    UID=${train_uid} \
    GID=${train_gid}
ENV HOME=/home/${USER}

RUN test -d ${HOME} && rm -r -f ${HOME} || :
RUN groupadd -f -g ${GID} ${USER} \
    && useradd -m -s /bin/bash -N -u ${UID} -g ${GID} ${USER} \
    && chown -R ${USER}:${GID} ${HOME} \
    && usermod -a -G root ${USER} \
    && echo "${USER} ALL=(ALL) NOPASSWD:ALL" | tee -a /etc/sudoers.d/train \
    && echo "PATH=${PATH}:/usr/local/cuda-8.0:/usr/local/cuda-8.0/bin" | tee -a ${HOME}/.bashrc

# Install requirements
ADD ./requirements_train.txt ${PROJECT_HOME}/requirements_train.txt
RUN pip install -i ${PYPI} --no-cache-dir -r ${PROJECT_HOME}/requirements_train.txt

# Assemble project
ADD . ${PROJECT_HOME}
RUN chown -R ${USER}:${GID} ${PROJECT_HOME}

# Assemble project
COPY ./scripts/start.sh /usr/local/bin/

WORKDIR ${PROJECT_HOME}
USER ${USER}
ENTRYPOINT ["start.sh"]
