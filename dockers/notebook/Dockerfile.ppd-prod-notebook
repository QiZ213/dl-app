ARG base
FROM ${base}

# Docker script to append jupyter notebook. Please refer to:
#   https://github.com/jupyter/docker-stacks/blob/master/base-notebook/Dockerfile
LABEL maintainer="Orso Xie(xieyuhan@cbdai.com)"

# Install dependencies
RUN yum update -y -q \
      && yum install -y -q python-devel mysql-devel gcc \
      && yum clean all \
      && mkdir /etc/ppd \
      && touch /etc/ppd/env.yaml \
      && echo "env: dev" | tee -a /etc/ppd/env.yaml


# Configure environment
ARG notebook_user=cbd
ARG notebook_uid=1000
ARG notebook_gid=100
ENV USER=${notebook_user} \
    UID=${notebook_uid} \
    GID=${notebook_gid}
ENV HOME=/home/${USER}
ENV PROJECT_HOME=${HOME}

ARG notebook_password
ENV PASSWORD=${notebook_password}
ARG notebook_base_url
ENV BASE_URL=${notebook_base_url}

# Install jupyter notebook
RUN pip install -i ${PYPI} --no-cache-dir ipython==5.0.0 \
    tornado==4.5.1 \
    ipykernel==4.8.0 \
    notebook==5.6.0 \
    jupyter-console==5.0.0 \
    jupyter

# Add Tini. Tini operates as a process subreaper for jupyter.
# This prevents kernel crashes.
# ENV TINI_VERSION v0.16.1
# ADD https://github.com/krallin/tini/releases/download/${TINI_VERSION}/tini /tini
ADD ./dockers/notebook/tini /tini
RUN chmod +x /tini
ENTRYPOINT ["/tini", "--"]

# Make /bin/sh be bash instead of dash
ENV SHELL=/bin/bash

# Create USER with specified UID and GID,and append it to "root" group.
RUN test -d ${HOME} && rm -r -f ${HOME} || :
RUN groupadd -f -g ${GID} ${USER} \
    && useradd -m -s /bin/bash -N -u ${UID} -g ${GID} ${USER} \
    && chown -R ${USER}:${GID} ${HOME} \
    && usermod -a -G root ${USER} \
    && echo "${USER} ALL=(ALL) NOPASSWD:ALL" | tee -a /etc/sudoers.d/notebook \
    && echo "PATH=${PATH}:/usr/local/cuda-8.0:/usr/local/cuda-8.0/bin" | tee -a ${HOME}/.bashrc


# Install requirements by inner source
ADD ./requirements_* /opt/
RUN echo "10.1.62.214 nexus3.love" | tee -a /etc/hosts \
      && pip install -i http://nexus3.love/repository/pypi/simple \
           --trusted-host=nexus3.love \
           --no-cache-dir \
           -r /opt/requirements_service.txt \
      && pip install -i http://nexus3.love/repository/pypi/simple \
           --trusted-host=nexus3.love \
           --no-cache-dir \
           -r /opt/requirements_production.txt \
      && rm -rf /opt/requirements_*

# Assemble project
COPY ./scripts/start.sh /usr/local/bin/
COPY ./scripts/start_notebook.sh /usr/local/bin/
COPY ./dockers/notebook/jupyter_notebook_config.py /etc/jupyter/

EXPOSE 8888
WORKDIR ${HOME}
USER ${USER}
